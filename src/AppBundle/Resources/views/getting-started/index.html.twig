{% extends 'AppBundle::html.html.twig' %}

{% set head_title = 'Authorization Server | AuthBucket\\Bundle\\OAuth2Bundle' %}

{% block page %}
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h1 id="authorization-server" class="page-header">Authorization Server</h1>
                <blockquote>
                    <p>The server issuing access tokens to the client after successfully authenticating the resource owner and obtaining authorization.</p>
                    <footer><a href="http://tools.ietf.org/html/rfc6749#section-1.1">1.1. Roles</a></footer>
                </blockquote>
                <p class="lead">Authorization server's endpoints usually without GUI, but just RESTful API interface. Read though <a href="https://github.com/authbucket/oauth2-symfony-bundle/blob/master/src/Resources/config/routing.yml">routing.yml</a> to see how we implement it.</p>

                <h2 id="protocol-endpoints" class="page-header">Protocol Endpoints</h2>
                <blockquote>
                    <p>The authorization process utilizes two authorization server endpoints (HTTP resources):</p>
                    <footer><a href="http://tools.ietf.org/html/rfc6749#section-3">3. Protocol Endpoints</a></footer>
                </blockquote>

                <h3 id="authorization-endpoint-oauth2authorize-and-oauth2authorizehttp">Authorization Endpoint <small>(<code>/api/oauth2/authorize</code> and <code>/demo/authorize</code>)</small></h3>
                <blockquote>
                    <p>The authorization endpoint is used to interact with the resource owner and obtain an authorization grant.</p>
                    <footer><a href="http://tools.ietf.org/html/rfc6749#section-3.1">3.1. Authorization Endpoint</a></footer>
                </blockquote>
                <p class="lead">Authorization endpoint (<a href="{{ path('api_oauth2_authorize') }}">HTTP Basic Authentication</a> and <a href="{{ path('app_authorize') }}">Form-based Authentication</a>) are protected by Symfony's <a href="http://symfony.com/doc/current/reference/configuration/security.html">SecurityBundle</a> in this example. Read though <a href="https://github.com/authbucket/oauth2-symfony-bundle/blob/master/app/config/security.yml">security.yml</a> to see how we implement it.</p>
                <p>Direct browser access is possible, authentication request will therefore triggered, and able to login with following testing account:</p>
                <ul>
                    <li>Username: <code>demousername1</code></li>
                    <li>Password: <code>demopassword1</code></li>
                </ul>
                <p>After successful login, by default if access this endpoint without addition parameters, an error message <code>{&quot;error&quot;:&quot;invalid_request&quot;}</code> should be shown in JSON format.</p>

                <h3 id="token-endpoint-oauth2token">Token Endpoint <small>(<code>/api/oauth2/token</code>)</small></h3>
                <blockquote>
                    <p>The token endpoint is used by the client to obtain an access token by presenting its authorization grant or refresh token.</p>
                    <footer><a href="http://tools.ietf.org/html/rfc6749#section-3.2">3.2. Token Endpoint</a></footer>
                </blockquote>
                <p class="lead"><a href="{{ path('api_oauth2_token') }}">Token endpoint</a> is protected by OAuth2Bundle's <a href="https://github.com/authbucket/oauth2-symfony-bundle/blob/master/src/AuthBucketOAuth2Bundle.php">AuthBucketOAuth2Bundle</a> in this example. Read though <a href="https://github.com/authbucket/oauth2-symfony-bundle/blob/master/app/config/security.yml">security.yml</a> to see how we implement it.</p>
                <p>By default this endpoint shouldn't access by browser directly with GET, else an error message <code>{&quot;error&quot;:&quot;invalid_request&quot;}</code> should be show in JSON format.</p>
                <p>For debug purpose, may consider send out POST request to this endpoint by <a href="https://addons.mozilla.org/en-US/firefox/addon/httprequester/">HttpRequester</a>.</p>

                <h2 id="additional-endpoints" class="page-header">Additional Endpoints</h2>
                <p class="lead">Following endpoints are excluded from <a href="http://tools.ietf.org/html/rfc6749">RFC6749</a>, but live implementation should consider it.</p>

                <h3 id="form-based-authentication-oauth2login">Form-based Authentication <small>(<code>/oauth2/login</code>)</small></h3>
                <p class="lead"><a href="{{ path('app_login') }}">Form-based Authentication</a> implemented by Symfony's <a href="http://symfony.com/doc/current/reference/configuration/security.html">SecurityBundle</a> in this example. Read though <a href="https://github.com/authbucket/oauth2-symfony-bundle/blob/master/tests/AppBundle/Resources/config/routing.yml">routing.yml</a> and <a href="https://github.com/authbucket/oauth2-symfony-bundle/blob/master/tests/AppBundle/Resources/views/demo/login.html.twig">login.html.twig</a> for more information.</p>
                <p>This is used for protect above Authorization Endpoints.</p>

                <h3 id="debug-endpoint-oauth2debug">Debug Endpoint <small>(<code>/api/oauth2/debug</code>)</small></h3>
                <p class="lead"><a href="{{ path('api_oauth2_debug') }}">Debug Endpoint</a> clone the idea of <a href="https://developers.facebook.com/docs/facebook-login/access-tokens#debug">Facebook's Debug API Endpoint</a>, return raw information of corresponding <code>access_token</code> provided. Read though <a href="https://github.com/authbucket/oauth2-symfony-bundle/blob/master/app/config/security.yml">security.yml</a> and <a href="https://github.com/authbucket/oauth2-symfony-bundle/blob/master/src/Resources/config/routing.yml">routing.yml</a> for more information.</p>
                <p>When working with an access token, you may need to check what information is associated with it, such as its user or expiry. To use this endpoint, you can issue a GET/POST request, e.g.:</p>
<pre><code class="http">GET /api/oauth2/debug?access_token={access_token} HTTP/1.1
Host: server.example.com</code></pre>
                <ul>
                    <li><code>access_token</code>: the access token you want to get information about</li>
                </ul>
                <p>The response of the API call is a JSON array containing a map of fields. For example:</p>
<pre><code class="json">{
    &quot;access_token&quot;: &quot;5dc0bdbb2f66a842cb46a02b6d559131&quot;,
    &quot;client_id&quot;: &quot;authorization_code_grant&quot;,
    &quot;expires&quot;: 1404641243,
    &quot;scope&quot;: [
        &quot;demoscope1&quot;
    ],
    &quot;token_type&quot;: &quot;bearer&quot;,
    &quot;username&quot;: &quot;demousername1&quot;
}</code></pre>
                <p>Remote Resource Server may also utilize this debug endpoint to verfiy the supplied access token.</p>
            </div>
        </div>
    </div>
{% endblock %}
